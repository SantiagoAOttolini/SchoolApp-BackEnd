{"version":3,"sources":["redux/reducers/login.js","redux/reducers/student.js","redux/reducers/qualification.js","redux/reducers/index.js","redux/actions/types.js","redux/store/store.js","components/home/home.js","redux/actions/login.js","components/login/Login.js","components/signup/register.js","components/menu/menu.js","redux/actions/student.js","redux/actions/qualification.js","routes/view.js","app.js","serviceWorker.js","index.js"],"names":["initialState","authentication","users","error","isLoading","message","undefined","logged","token","failedLogin","students","size","studentSelected","qualifications","qualificationSelected","combineReducers","state","action","type","payload","newUser","user","newStudent","student","console","log","studentToDelete","findIndex","ele","_id","splice","newQualification","qualification","qualificationToDelete","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","Home","className","to","Component","connect","Authentication","dispatch","bindActionCreators","logIn","response","request","timeout","method","headers","body","JSON","stringify","email","document","getElementById","value","password","fetch","then","json","msg","Login","props","getLogin","values","history","push","bind","initialValues","onSubmit","this","validationSchema","Yup","shape","min","required","handleSubmit","id","name","placeholder","color","loading","ownProps","Register","postUser","res","Object","entries","length","Promise","reject","catch","Menu","check","chek2","fetchStudents","fetchQualifications","qualificationList","lastname","age","class","postStudent","setState","prevState","onClick","check2","studentId","subject","note","postQualification","as","studentList","map","deleteStudent","deleteQualification","logOut","mapDispatchToProps","getState","authorization","createdStudent","createdQualification","code","AUTHENTICATION","Routes","exact","path","component","from","PrivateRoute","rest","render","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.020b7e57.chunk.js","sourcesContent":["import {\r\n  ADD_USER_PENDING,\r\n  ADD_USER_SUCCESS,\r\n  ADD_USER_ERROR,\r\n  FETCH_USERS,\r\n  AUTHENTICATION,\r\n  LOGIN_USER_PENDING,\r\n  LOGIN_USER_SUCCESS,\r\n  LOGIN_USER_ERROR,\r\n  USER_LOGOUT,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  authentication: false,\r\n  users: [],\r\n  error: null,\r\n  isLoading: false,\r\n  message: undefined,\r\n  logged: false,\r\n  token: \"\",\r\n  failedLogin: false,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case AUTHENTICATION:\r\n      return {\r\n        ...state,\r\n        authentication: action.payload.authentication,\r\n        token: action.payload.token,\r\n      };\r\n    case USER_LOGOUT:\r\n      return {\r\n        state: initialState,\r\n      };\r\n    case LOGIN_USER_PENDING:\r\n      return {\r\n        //Create a copy from the state\r\n        ...state,\r\n        isLoading: true,\r\n        failedLogin: false,\r\n      };\r\n    case LOGIN_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        //Get the token from the backend\r\n        token: action.payload.token,\r\n        authentication: true,\r\n      };\r\n\r\n    case LOGIN_USER_ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        message: action.payload,\r\n        failedLogin: true,\r\n      };\r\n\r\n    case FETCH_USERS:\r\n      return {\r\n        ...state,\r\n        users: action.payload,\r\n      };\r\n    case ADD_USER_PENDING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n\r\n    case ADD_USER_SUCCESS: {\r\n      const newUser = action.payload.user;\r\n      const user = [...state.users, newUser];\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        users: user,\r\n      };\r\n    }\r\n    case ADD_USER_ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n        message: action.payload.message,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  FETCH_STUDENT,\r\n  ADD_STUDENT_PENDING,\r\n  ADD_STUDENT_SUCCESS,\r\n  ADD_STUDENT_ERROR,\r\n  DELETE_STUDENT_PENDING,\r\n  DELETE_STUDENT_SUCCESS,\r\n  DELETE_STUDENT_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  students: [],\r\n  size: \"\",\r\n  error: null,\r\n  isLoading: false,\r\n  message: undefined,\r\n  studentSelected: \"\",\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case FETCH_STUDENT:\r\n      return {\r\n        ...state,\r\n        students: action.payload.students\r\n      };\r\n\r\n    case ADD_STUDENT_PENDING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n\r\n    case ADD_STUDENT_SUCCESS: {\r\n      const newStudent = action.payload.student;\r\n      const students = [...state.students, newStudent];\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        students: students,\r\n      };\r\n    }\r\n\r\n    case ADD_STUDENT_ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n        message: action.payload.message,\r\n      };\r\n\r\n    case DELETE_STUDENT_PENDING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n\r\n    case DELETE_STUDENT_SUCCESS:\r\n      console.log(action.payload);\r\n      const newStudent = [...state.students];\r\n      const studentToDelete = newStudent.findIndex(\r\n        (ele) => ele._id === action.payload._id\r\n      );\r\n\r\n      newStudent.splice(studentToDelete, 1);\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        students: newStudent,\r\n      };\r\n\r\n    case DELETE_STUDENT_ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        message: action.payload.message,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  FETCH_QUALIFICATION,\r\n  ADD_QUALIFICATION_PENDING,\r\n  ADD_QUALIFICATION_SUCCESS,\r\n  ADD_QUALIFICATION_ERROR,\r\n  DELETE_QUALIFICATION_PENDING,\r\n  DELETE_QUALIFICATION_SUCCESS,\r\n  DELETE_QUALIFICATION_ERROR,\r\n  SET_SELECTED_QUALIFICATION_ID,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  qualifications: [],\r\n  size: \"\",\r\n  error: null,\r\n  isLoading: false,\r\n  message: undefined,\r\n  qualificationSelected: \"\",\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case FETCH_QUALIFICATION:\r\n      return {\r\n        ...state,\r\n        qualifications: action.payload.qualifications,\r\n      };\r\n\r\n    case ADD_QUALIFICATION_PENDING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n\r\n    case ADD_QUALIFICATION_SUCCESS: {\r\n      console.log(action.payload);\r\n      const newQualification = action.payload.qualification;\r\n      const qualifications = [...state.qualifications, newQualification];\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        qualifications: qualifications,\r\n      };\r\n    }\r\n\r\n    case ADD_QUALIFICATION_ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n        message: action.payload.message,\r\n      };\r\n\r\n    case SET_SELECTED_QUALIFICATION_ID: {\r\n      return {\r\n        ...state,\r\n        qualificationSelected: action.payload,\r\n      };\r\n    }\r\n\r\n    case DELETE_QUALIFICATION_PENDING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n\r\n    case DELETE_QUALIFICATION_SUCCESS:\r\n      console.log(action.payload);\r\n      const newQualification = [...state.qualifications];\r\n      const qualificationToDelete = newQualification.findIndex(\r\n        (ele) => ele._id === action.payload._id\r\n      );\r\n\r\n      //Separates the selected qualification from the rest\r\n      newQualification.splice(qualificationToDelete, 1);\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        qualifications: newQualification,\r\n      };\r\n\r\n    case DELETE_QUALIFICATION_ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        message: action.payload.message,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport loginReducer from \"./login\";\r\nimport productReducer from \"./student\";\r\nimport qualificationReducer from \"./qualification\";\r\n\r\n//Combine the reducers\r\nexport default combineReducers({\r\n  users: loginReducer,\r\n  students: productReducer,\r\n  qualifications: qualificationReducer,\r\n});\r\n","//User Exports\r\nexport const LOGIN_USER_PENDING = \"LOGIN_USER_PENDING\";\r\nexport const LOGIN_USER_SUCCESS = \"LOGIN_USER_SUCCESS\";\r\nexport const LOGIN_USER_ERROR = \"LOGIN_USER_ERROR\";\r\nexport const AUTHENTICATION = \"AUTHENTICATION\";\r\nexport const FETCH_USERS = \"FETCH_USERS\";\r\nexport const ADD_USER_PENDING = \"ADD_USER_PENDING\";\r\nexport const ADD_USER_SUCCESS = \"ADD_USER_SUCCESS\";\r\nexport const ADD_USER_ERROR = \"ADD_USER_ERROR\";\r\nexport const USER_LOGOUT = \"USER_LOGOUT\";\r\n//Students Exports\r\nexport const FETCH_STUDENT = \"FETCH_STUDENT\";\r\nexport const ADD_STUDENT_PENDING = \"ADD_STUDENT_PENDING\";\r\nexport const ADD_STUDENT_SUCCESS = \"ADD_STUDENT_SUCCESS\";\r\nexport const ADD_STUDENT_ERROR = \"ADD_STUDENT_ERROR\";\r\nexport const DELETE_STUDENT_PENDING = \"DELETE_STUDENT_PENDING\";\r\nexport const DELETE_STUDENT_SUCCESS = \"DELETE_STUDENT_SUCCESS\";\r\nexport const DELETE_STUDENT_ERROR = \"DELETE_STUDENT_ERROR\";\r\nexport const SET_SELECTED_STUDENT_ID = \"SET_SELECTED_STUDENT_ID\";\r\n//Qualification Exports\r\nexport const FETCH_QUALIFICATION = \"FETCH_QUALIFICATION\";\r\nexport const ADD_QUALIFICATION_PENDING = \"ADD_QUALIFICATION_PENDING\";\r\nexport const ADD_QUALIFICATION_SUCCESS = \"ADD_QUALIFICATION_SUCCESS\";\r\nexport const ADD_QUALIFICATION_ERROR = \"ADD_QUALIFICATION_ERROR\";\r\nexport const DELETE_QUALIFICATION_PENDING = \"DELETE_QUALIFICATION_PENDING\";\r\nexport const DELETE_QUALIFICATION_SUCCESS = \"DELETE_QUALIFICATION_SUCCESS\";\r\nexport const DELETE_QUALIFICATION_ERROR = \"DELETE_QUALIFICATION_ERROR\";\r\nexport const SET_SELECTED_QUALIFICATION_ID = \"SET_SELECTED_QUALIFICATION_ID\";\r\n","import { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"../reducers\";\r\n\r\nconst middleware = [thunk];\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import \"./home.css\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"containerHome\">\r\n        <div className=\"header\">\r\n          <div className=\"title\">\r\n            <h1 className=\"text1\">School App</h1>\r\n            <h1 className=\"text2\">Welcome</h1>\r\n          </div>\r\n          <div className=\"nav\">\r\n            <ul>\r\n              <li>\r\n                <Link className=\"login\" to=\"/Login\">\r\n                  Login\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                {\" \"}\r\n                <Link className=\"register\" to=\"/register\">\r\n                  Register\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div className=\"wrapper\">\r\n          <div className=\"section\">\r\n            <h2 className=\"headerInfo\">Information</h2>\r\n            <p>\r\n            This is a web application designed by students Ivan Jukonis and Santiago Ottolini from UAI university. \r\n            The objective of this application is to demonstrate the knowledge acquired on the subject MCGA dictated by professor David Curras.<br></br>\r\n            The idea of ​​the website is to recreate the functionality of a student grade record used by teachers. \r\n            Here you will interact with a list of students and a list of their grades.<br></br>\r\n            Access to the page will be given through a login with the corresponding security measures.\r\n            </p>         \r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n//Get state\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoading: state.isLoading,\r\n    authentication: state.Authentication,\r\n  };\r\n};\r\n//Dispatch\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators({}, dispatch);\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","import {\r\n  LOGIN_USER_PENDING,\r\n  LOGIN_USER_SUCCESS,\r\n  LOGIN_USER_ERROR,\r\n  FETCH_USERS,\r\n  ADD_USER_PENDING,\r\n  ADD_USER_SUCCESS,\r\n  ADD_USER_ERROR,\r\n  USER_LOGOUT,\r\n  AUTHENTICATION,\r\n} from \"./types\";\r\n\r\n//#region POST USER\r\nexport const postUser = (user) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: ADD_USER_PENDING,\r\n    });\r\n    const request = {\r\n      timeout: 25000,\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(user),\r\n    };\r\n    return fetch(\"https://rocky-reef-67259.herokuapp.com/api/user/signup\", request)\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        if (!Object.entries(response).length) {\r\n          return Promise.reject(response);\r\n        }\r\n        return dispatch({\r\n          type: ADD_USER_SUCCESS,\r\n          payload: {\r\n            user: response,\r\n          },\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        return dispatch({\r\n          type: ADD_USER_ERROR,\r\n          payload: error,\r\n        });\r\n      });\r\n  };\r\n};\r\n//#endregion\r\n//#region GET USER\r\nexport const fetchUser = () => (dispatch) => {\r\n  fetch(\"https://rocky-reef-67259.herokuapp.com/api/user/\")\r\n    .then((response) => response.json())\r\n    .then((response) => {\r\n      return dispatch({\r\n        type: FETCH_USERS,\r\n        payload: response,\r\n      });\r\n    });\r\n};\r\n//#endregion\r\n//#region LOGIN\r\nexport const logIn = (response) => {\r\n  return (dispatch) => {\r\n    //Dispatch action\r\n    dispatch({\r\n      type: LOGIN_USER_PENDING,\r\n    });\r\n    const request = {\r\n      timeout: 25000,\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        email: document.getElementById(\"emailLogin\").value,\r\n        password: document.getElementById(\"passwordLogin\").value,\r\n      }),\r\n    };\r\n    //BackEnd Fetch\r\n    return fetch(\"https://rocky-reef-67259.herokuapp.com/api/user/login\", request)\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        //In case of success on dispatch, move to reducer\r\n        if (response.msg !== \"Authentication Failed\") {\r\n          return dispatch({\r\n            type: LOGIN_USER_SUCCESS,\r\n            payload: response,\r\n          });\r\n        } else {\r\n          return dispatch({\r\n            type: LOGIN_USER_ERROR,\r\n            payload: response.error,\r\n          });\r\n        }\r\n      });\r\n  };\r\n};\r\n//#endregion\r\n//#region LOGOUT\r\nexport const logOut = (dispatch) => {\r\n  return {\r\n    type: USER_LOGOUT,\r\n  };\r\n};\r\n//#endregion\r\n//#region AUTHENTICATION\r\nexport const Authentication = (authentication) => {\r\n  return {\r\n    type: AUTHENTICATION,\r\n    payload: authentication,\r\n  };\r\n};\r\n//#endregion\r\n","import \"./login.css\";\r\nimport React, { Component } from \"react\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport { connect } from \"react-redux\";\r\nimport { logIn } from \"../../redux/actions/login\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ClipLoader } from \"react-spinners\";\r\nimport * as Yup from \"yup\";\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.getLogin = this.getLogin.bind(this);\r\n  }\r\n  //Authentication\r\n  getLogin = (values) => {\r\n    this.props.logIn(values).then((response) => {\r\n      if (this.props.authentication) {\r\n        this.props.history.push(\"/menu\");\r\n      }\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"loginContainer\">\r\n        <Formik\r\n          initialValues={{ email: \"\", password: \"\" }}\r\n          onSubmit={this.getLogin}\r\n          //Formik validation\r\n          validationSchema={Yup.object().shape({\r\n            email: Yup.string().min(2).required(\"Required\"),\r\n            password: Yup.string().min(2).required(\"Required\"),\r\n          })}\r\n        >\r\n          {({ handleSubmit }) => (\r\n            <Form onSubmit={handleSubmit}>\r\n              <div className=\"containerLogin\">\r\n                <h5> Sign in to SchoolApp</h5>\r\n                <div className=\"login\">\r\n                  <Field\r\n                    type=\"email\"\r\n                    id=\"emailLogin\"\r\n                    name=\"email\"\r\n                    placeholder=\"Email\"\r\n                  />\r\n                  <Field\r\n                    type=\"password\"\r\n                    id=\"passwordLogin\"\r\n                    name=\"password\"\r\n                    placeholder=\"Password\"\r\n                  />\r\n                  {!this.props.isLoading ? (\r\n                    <button type=\"submit\" className=\"btnLogin\">\r\n                      Sign In\r\n                    </button>\r\n                  ) : (\r\n                    //Loading bar\r\n                    <ClipLoader size={25} color={\"white\"} loading />\r\n                  )}\r\n                  <div>\r\n                    {this.props.failedLogin ? (\r\n                      <div className=\"loginError\"></div>\r\n                    ) : null}\r\n                  </div>\r\n                </div>\r\n                <div className=\"btnLinks\">\r\n                  <p>\r\n                    <Link className=\"btnCreateAccount\" to=\"/register\">\r\n                      Create Account\r\n                    </Link>\r\n                  </p>\r\n                  <p>\r\n                    <Link className=\"btnHome\" to=\"/home\">\r\n                      Back to home\r\n                    </Link>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    users: state.users,\r\n    isLoading: state.users.isLoading,\r\n    authentication: state.users.authentication,\r\n    failedLogin: state.users.failedLogin,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators({ logIn }, dispatch);\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import \"./register.css\";\r\nimport React, { Component } from \"react\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport { connect } from \"react-redux\";\r\nimport { postUser } from \"../../redux/actions/login\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as Yup from \"yup\";\r\n\r\nclass Register extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"registerContainer\">\r\n        <Formik\r\n          initialValues={{ password: \"\", email: \"\" }}\r\n          onSubmit={(values) => {\r\n            this.props.postUser(values).then((res) => {\r\n              this.props.history.push(\"/home\");\r\n            });\r\n          }}\r\n          //Formik validation\r\n          validationSchema={Yup.object().shape({\r\n            password: Yup.string().min(2).required(\"Required\"),\r\n            email: Yup.string().min(2).required(\"Required\"),\r\n          })}\r\n        >\r\n          {({ handleSubmit }) => (\r\n            <Form onSubmit={handleSubmit}>\r\n              <div className=\"containerRegister\">\r\n                <h4> Sign up to SchoolApp</h4>\r\n\r\n                <Field\r\n                  type=\"text\"\r\n                  className=\"registerEmail\"\r\n                  name=\"email\"\r\n                  placeholder=\"Email\"\r\n                />\r\n                <Field\r\n                  type=\"text\"\r\n                  className=\"registerPassword\"\r\n                  name=\"password\"\r\n                  placeholder=\"Password\"\r\n                />\r\n                <button className=\"btnSubmit\" type=\"submit\">\r\n                  Sign Up\r\n                </button>\r\n                <div className=\"btnRegisterLinks\">\r\n                  <p>\r\n                    <Link className=\"btnBackHome\" to=\"/home\">\r\n                      Back to home\r\n                    </Link>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  users: state.users,\r\n  isLoading: state.isLoading,\r\n});\r\nexport default connect(mapStateToProps, { postUser })(Register);\r\n","import \"./menu.css\";\r\nimport React, { Component } from \"react\";\r\nimport { Authentication, logOut } from \"../../redux/actions/login\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n  postStudent,\r\n  fetchStudents,\r\n  deleteStudent,\r\n} from \"../../redux/actions/student\";\r\nimport {\r\n  postQualification,\r\n  fetchQualifications,\r\n  deleteQualification,\r\n} from \"../../redux/actions/qualification\";\r\n\r\nclass Menu extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      //PopUp overlayState\r\n      check: false,\r\n      chek2: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    //Get students and qualifications from backend api rest\r\n    this.props.fetchStudents();\r\n    this.props.fetchQualifications();\r\n  }\r\n\r\n  render() {\r\n    console.log(this.props.qualificationList);\r\n    return (\r\n      <div className=\"containerMenu\">\r\n        {/*PopUp*/}\r\n        <div\r\n          className={this.state.check ? \"overlayEnabled\" : \"overlayDisabled\"}\r\n        ></div>\r\n        <div className={this.state.check ? \"popUpEnabled\" : \"popUpDisabled\"}>\r\n          {/*Start Formik students*/}\r\n          <Formik\r\n            initialValues={{ name: \"\", lastname: \"\", age: \"\", class: \"\" }}\r\n            onSubmit={(values) => {\r\n              //Call action \"postStudent\"\r\n              this.props.postStudent(values);\r\n              this.setState((prevState) => ({ check: !prevState.check }));\r\n            }}\r\n            //Formik validation\r\n            validationSchema={Yup.object().shape({\r\n              name: Yup.string().min(2).required(\"Required\"),\r\n              lastname: Yup.string().min(2).required(\"Required\"),\r\n              age: Yup.number().min(2).required(\"Required\"),\r\n              class: Yup.string().min(2).required(\"Required\"),\r\n            })}\r\n          >\r\n            {({ handleSubmit }) => (\r\n              <Form onSubmit={handleSubmit}>\r\n                <div className=\"containerAddStudent\">\r\n                  <h4> Add Students</h4>\r\n\r\n                  <Field\r\n                    type=\"text\"\r\n                    className=\"nameStudent\"\r\n                    name=\"name\"\r\n                    placeholder=\"Name\"\r\n                  />\r\n\r\n                  <Field\r\n                    type=\"text\"\r\n                    className=\"lastnameStudent\"\r\n                    name=\"lastname\"\r\n                    placeholder=\"Last name\"\r\n                  />\r\n                  <Field\r\n                    type=\"text\"\r\n                    className=\"ageStudent\"\r\n                    name=\"age\"\r\n                    placeholder=\"Age\"\r\n                  />\r\n                  <Field\r\n                    type=\"text\"\r\n                    className=\"classStudent\"\r\n                    name=\"class\"\r\n                    placeholder=\"Class\"\r\n                  />\r\n                  <button className=\"btnAddStudent\" type=\"submit\">\r\n                    Add\r\n                  </button>\r\n                  {/*Close PopUp*/}\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btnAddStudent\"\r\n                    onClick={() =>\r\n                      this.setState((prevState) => ({\r\n                        check: !prevState.check,\r\n                      }))\r\n                    }\r\n                  >\r\n                    Back\r\n                  </button>\r\n                </div>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </div>\r\n        <div\r\n          className={\r\n            this.state.check2 ? \"overlayEnabledMark\" : \"overlayDisabledMark\"\r\n          }\r\n        ></div>\r\n        <div\r\n          className={\r\n            this.state.check2 ? \"popUpEnabledMark\" : \"popUpDisabledMark\"\r\n          }\r\n        >\r\n          {/*Start Formik qualification*/}\r\n          <Formik\r\n            initialValues={{ studentId: \"\", subject: \"\", note: \"\" }}\r\n            onSubmit={(values) => {\r\n              //Call action \"postQualification\"\r\n              this.props.postQualification(values);\r\n              this.setState((prevState) => ({ check2: !prevState.check2 }));\r\n            }}\r\n            //Formik validation\r\n            validationSchema={Yup.object().shape({\r\n              studentId: Yup.string().min(2).required(\"Required\"),\r\n              subject: Yup.string().min(2).required(\"Required\"),\r\n              note: Yup.number().min(2).required(\"Required\"),\r\n            })}\r\n          >\r\n            {({ handleSubmit }) => (\r\n              <Form onSubmit={handleSubmit}>\r\n                <div className=\"containerAddMarks\">\r\n                  <h4> Add Notes</h4>\r\n                  <Field\r\n                    type=\"text\"\r\n                    as=\"select\"\r\n                    className=\"nameStudentMark\"\r\n                    name=\"studentId\"\r\n                    placeholder=\"Student\"\r\n                  >\r\n                    {this.props.studentList.map((student) => {\r\n                      return (\r\n                        <option\r\n                          //The id is saved into the values of formik\r\n                          value={student._id}\r\n                          //Concatenate the name student with the lastname\r\n                        >{`${student.name}-${student.lastname}`}</option>\r\n                      );\r\n                    })}\r\n                  </Field>\r\n                  <Field\r\n                    type=\"text\"\r\n                    className=\"subjectMark\"\r\n                    name=\"subject\"\r\n                    placeholder=\"Subject\"\r\n                  />\r\n                  <Field\r\n                    type=\"text\"\r\n                    className=\"noteMark\"\r\n                    name=\"note\"\r\n                    placeholder=\"Note\"\r\n                  />\r\n                  <button className=\"btnAddMark\" type=\"submit\">\r\n                    Add\r\n                  </button>\r\n                  {/*Close PopUp*/}\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btnAddMark\"\r\n                    onClick={() =>\r\n                      this.setState((prevState) => ({\r\n                        check2: !prevState.check2,\r\n                      }))\r\n                    }\r\n                  >\r\n                    Back\r\n                  </button>\r\n                </div>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </div>\r\n        <table className=\"content-table-student\">\r\n          <thead>\r\n            <tr>\r\n              {/*Name of the columns*/}\r\n              <th>Actions</th>\r\n              <th>Name</th>\r\n              <th>Last name</th>\r\n              <th>Age</th>\r\n              <th>Class</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.props.studentList &&\r\n              this.props.studentList.map((student) => {\r\n                //Show the students if they exist. For each student return a row. Everytime it is run a new one is added\r\n                return (\r\n                  <tr>\r\n                    <td>\r\n                      <button\r\n                        className=\"btnDeleteStudent\"\r\n                        onClick={() => {\r\n                          //Call action \"deleteStudent\"\r\n                          this.props.deleteStudent(student._id);\r\n                        }}\r\n                      >\r\n                        Delete\r\n                      </button>\r\n                    </td>\r\n                    {/*Bring the atributte of the student*/}\r\n                    <td>{student.name}</td>\r\n                    <td>{student.lastname}</td>\r\n                    <td>{student.age}</td>\r\n                    <td>{student.class}</td>\r\n                  </tr>\r\n                );\r\n              })}\r\n          </tbody>\r\n          {/*Open PopUp*/}\r\n          <button\r\n            className=\"btnAdd\"\r\n            onClick={() =>\r\n              this.setState((prevState) => ({ check: !prevState.check }))\r\n            }\r\n          >\r\n            Add\r\n          </button>\r\n        </table>\r\n        <table className=\"content-table-mark\">\r\n          <thead>\r\n            <tr>\r\n              <th>Actions</th>\r\n              <th>Student</th>\r\n              <th>Subject</th>\r\n              <th>Note</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.props.qualificationList &&\r\n              this.props.qualificationList.map((qualification) => {\r\n                //Show the qualification if they exist. For each qualification return a row. Everytime it is run a new one is added\r\n                return (\r\n                  <tr>\r\n                    <button\r\n                      className=\"btnDeleteQualification\"\r\n                      onClick={() => {\r\n                        //Call action \"deleteQualification\"\r\n                        this.props.deleteQualification(qualification._id);\r\n                      }}\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                    {/*Bring the atributte of the student*/}\r\n                    <td>{`${qualification.student.name}-${qualification.student.lastname}`}</td>\r\n                    <td>{qualification.subject}</td>\r\n                    <td>{qualification.note}</td>\r\n                  </tr>\r\n                );\r\n              })}\r\n          </tbody>\r\n          {/*Open PopUp*/}\r\n          <button\r\n            className=\"btnAdd\"\r\n            onClick={() =>\r\n              this.setState((prevState) => ({ check2: !prevState.check2 }))\r\n            }\r\n          >\r\n            Add\r\n          </button>\r\n        </table>\r\n        <div className=\"buttonLogOut\">\r\n          <Link className=\"btnLogOut\" to=\"/login\" onClick={this.props.logOut}>\r\n            Log Out\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoading: state.isLoading,\r\n    authentication: state.AUTHENTICATION,\r\n    studentList: state.students.students, // Bring the students\r\n    qualificationList: state.qualifications.qualifications, //Bring the qualification\r\n  };\r\n};\r\n//Call  actions\r\nconst mapDispatchToProps = {\r\n  Authentication,\r\n  logOut,\r\n  postStudent,\r\n  fetchStudents,\r\n  postQualification,\r\n  fetchQualifications,\r\n  deleteStudent,\r\n  deleteQualification,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Menu);\r\n","import {\r\n  FETCH_STUDENT,\r\n  ADD_STUDENT_PENDING,\r\n  ADD_STUDENT_SUCCESS,\r\n  ADD_STUDENT_ERROR,\r\n  DELETE_STUDENT_PENDING,\r\n  DELETE_STUDENT_SUCCESS,\r\n  DELETE_STUDENT_ERROR,\r\n} from \"./types\";\r\n\r\nimport store from \"../store/store\";\r\n\r\n//#region GET STUDENTS\r\nexport const fetchStudents = () => (dispatch) => {\r\n  fetch(\"https://rocky-reef-67259.herokuapp.com/api/students\")\r\n    .then((response) => response.json())\r\n    .then((response) => {\r\n      return dispatch({\r\n        type: FETCH_STUDENT,\r\n        payload: response,\r\n      });\r\n    });\r\n};\r\n//#endregion\r\n//#region POST STUDENT\r\nexport const postStudent = (student) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: ADD_STUDENT_PENDING,\r\n    });\r\n    //CombineTools allow us to get the users\r\n    const { token } = store.getState().users;\r\n    const request = {\r\n      timeout: 25000,\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        authorization: `BEARER ${token}`,\r\n      },\r\n      body: JSON.stringify(student),\r\n    };\r\n    return fetch(`https://rocky-reef-67259.herokuapp.com/api/students`, request)\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        if (!Object.entries(response).length) {\r\n          return Promise.reject(response);\r\n        }\r\n        return dispatch({\r\n          type: ADD_STUDENT_SUCCESS,\r\n          payload: {\r\n            student: response.createdStudent,\r\n          },\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        return dispatch({\r\n          type: ADD_STUDENT_ERROR,\r\n          payload: error,\r\n        });\r\n      });\r\n  };\r\n};\r\n//#endregion\r\n\r\n//#region DELETE STUDENT\r\nexport const deleteStudent = (code) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: DELETE_STUDENT_PENDING,\r\n    });\r\n    const options = {\r\n      timeout: 25000,\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    return fetch(`https://rocky-reef-67259.herokuapp.com/api/students/${code}`, options)\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        if (!Object.entries(response).length) {\r\n          return Promise.reject(response);\r\n        }\r\n        if (response.message === \"error\") {\r\n          return dispatch({\r\n            type: DELETE_STUDENT_ERROR,\r\n          });\r\n        } else {\r\n          return dispatch({\r\n            type: DELETE_STUDENT_SUCCESS,\r\n            payload: response,\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        return dispatch({\r\n          type: DELETE_STUDENT_ERROR,\r\n          payload: error,\r\n        });\r\n      });\r\n  };\r\n};\r\n//#endregion\r\n","import {\r\n  FETCH_QUALIFICATION,\r\n  ADD_QUALIFICATION_PENDING,\r\n  ADD_QUALIFICATION_SUCCESS,\r\n  ADD_QUALIFICATION_ERROR,\r\n  DELETE_QUALIFICATION_PENDING,\r\n  DELETE_QUALIFICATION_SUCCESS,\r\n  DELETE_QUALIFICATION_ERROR,\r\n} from \"./types\";\r\n\r\nimport store from \"../store/store\";\r\n\r\n//#region GET QUALIFICATIONS\r\nexport const fetchQualifications = () => (dispatch) => {\r\n  fetch(\"https://rocky-reef-67259.herokuapp.com/api/qualifications\")\r\n    .then((response) => response.json())\r\n    .then((response) => {\r\n      return dispatch({\r\n        type: FETCH_QUALIFICATION,\r\n        payload: response,\r\n      });\r\n    });\r\n};\r\n//#endregion\r\n//#region POST QUALIFICATION\r\nexport const postQualification = (qualification) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: ADD_QUALIFICATION_PENDING,\r\n    });\r\n    //CombineTools allow us to get the users\r\n    const { token } = store.getState().users;\r\n    const request = {\r\n      timeout: 25000,\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        authorization: `BEARER ${token}`,\r\n      },\r\n      body: JSON.stringify(qualification),\r\n    };\r\n    return fetch(`https://rocky-reef-67259.herokuapp.com/api/qualifications`, request)\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        if (!Object.entries(response).length) {\r\n          return Promise.reject(response);\r\n        }\r\n        return dispatch({\r\n          type: ADD_QUALIFICATION_SUCCESS,\r\n          payload: {\r\n            qualification: response.createdQualification,\r\n          },\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        return dispatch({\r\n          type: ADD_QUALIFICATION_ERROR,\r\n          payload: error,\r\n        });\r\n      });\r\n  };\r\n};\r\n//#endregion\r\n\r\n//#region DELETE QUALIFICATION\r\nexport const deleteQualification = (code) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: DELETE_QUALIFICATION_PENDING,\r\n    });\r\n    const options = {\r\n      timeout: 25000,\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    return fetch(`https://rocky-reef-67259.herokuapp.com/api/qualifications/${code}`, options)\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        if (!Object.entries(response).length) {\r\n          return Promise.reject(response);\r\n        }\r\n        return dispatch({\r\n          type: DELETE_QUALIFICATION_SUCCESS,\r\n          payload: response,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        return dispatch({\r\n          type: DELETE_QUALIFICATION_ERROR,\r\n          payload: error,\r\n        });\r\n      });\r\n  };\r\n};\r\n//#endregion\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n//Single Components\r\nimport Home from \"../components/home/home.js\";\r\nimport Login from \"../components/login/Login.js\";\r\nimport Register from \"../components/signup/register.js\";\r\nimport Menu from \"../components/menu/menu.js\";\r\nimport store from \"../redux/store/store\";\r\n\r\nclass Routes extends Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route exact path=\"/home\" component={Home} />\r\n          <PrivateRoute exact path=\"/menu\" component={Menu} />\r\n          <Route exact path=\"/login\" component={Login} />\r\n          <Route exact path=\"/register\" component={Register} />\r\n          <Redirect from=\"/\" to=\"/home\" />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n//Authentication Route\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) =>\r\n      store.getState().users.token ? (\r\n        //Show component in case of true (Token)\r\n        <Component {...props} />\r\n      ) : (\r\n        //Redirect to home in case of false\r\n        <Redirect to=\"/\" />\r\n      )\r\n    }\r\n  />\r\n);\r\nexport default connect()(Routes);\r\n","import React, { Component } from \"react\";\r\nimport { Provider } from \"react-redux\";\r\n//Bring the store\r\nimport store from \"./redux/store/store\";\r\n//Bring the roads\r\nimport Routes from \"./routes/view\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      //Provider: enable the store for everyone routes\r\n      <Provider store={store}>\r\n        <Routes />\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./app\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}