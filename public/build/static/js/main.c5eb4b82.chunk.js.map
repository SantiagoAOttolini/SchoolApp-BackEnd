{"version":3,"sources":["redux/reducers/login.js","redux/reducers/student.js","redux/reducers/qualification.js","redux/reducers/index.js","redux/actions/types.js","redux/store/store.js","components/home/home.js","redux/actions/login.js","components/login/Login.js","components/signup/register.js","components/menu/menu.js","redux/actions/student.js","redux/actions/qualification.js","routes/view.js","app.js","serviceWorker.js","index.js"],"names":["initialState","authentication","users","error","isLoading","message","undefined","logged","token","failedLogin","students","size","adminActions","studentSelected","qualifications","qualificationSelected","combineReducers","state","action","type","payload","newUser","user","newStudent","student","console","log","newStudentUpdate","items","studentToUpdate","findIndex","ele","_id","splice","data","studentToDelete","newQualification","qualification","newQualificationUpdate","qualificationToUpdate","qualificationToDelete","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","Home","className","to","Component","connect","Authentication","dispatch","bindActionCreators","logIn","request","timeout","method","headers","body","JSON","stringify","email","document","getElementById","value","password","fetch","then","response","json","msg","Login","props","getLogin","values","history","push","bind","initialValues","onSubmit","this","handleSubmit","id","name","placeholder","color","loading","ownProps","Register","postUser","Object","entries","length","Promise","reject","catch","Menu","check","chek2","fetchStudents","fetchQualifications","qualificationList","lastname","age","class","postStudent","setState","prevState","onClick","check2","studentId","subject","note","postQualification","as","defaultValue","studentList","map","deleteStudent","deleteQualification","logOut","mapDispatchToProps","getState","authorization","createdStudent","createdQualification","code","AUTHENTICATION","Routes","exact","path","component","from","PrivateRoute","rest","render","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c5eb4b82.chunk.js","sourcesContent":["import {\r\n  ADD_USER_PENDING,\r\n  ADD_USER_SUCCESS,\r\n  ADD_USER_ERROR,\r\n  FETCH_USERS,\r\n  AUTHENTICATION,\r\n  LOGIN_USER_PENDING,\r\n  LOGIN_USER_SUCCESS,\r\n  LOGIN_USER_ERROR,\r\n  USER_LOGOUT,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  authentication: false,\r\n  users: [],\r\n  error: null,\r\n  isLoading: false,\r\n  message: undefined,\r\n  logged: false,\r\n  token: \"\",\r\n  failedLogin: false,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case AUTHENTICATION:\r\n      return {\r\n        ...state,\r\n        authentication: action.payload.authentication,\r\n        token: action.payload.token,\r\n      };\r\n    case USER_LOGOUT:\r\n      return {\r\n        state: initialState,\r\n      };\r\n    case LOGIN_USER_PENDING:\r\n      return {\r\n        //CAEMOS ACA DESDE EL ACTION EN DONDE NOS DIJIERON QUE SE ESTA LOGEANDO ALGUIEN\r\n        //EL REDUCER HACE UNA COPIA DEL STORE Y LE DICE QUE AGUANTE PORQUE VAN A HACER MAS COSAS --> ACTION\r\n        ...state,\r\n        isLoading: true,\r\n        failedLogin: false,\r\n      };\r\n    //PREGUNTAR PARA QUE ESTA EL PENDING\r\n\r\n    //CAEMOS ACA DESDE EL ACTION QUE\r\n    case LOGIN_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        //PAYLOAD ES LA RES QUE VINO DEL BACK Y ESA RES VENIA CON UN TOKEN ENTONCES GUARDAMOS ESE TOKEN EN LA VARIABLE TOKEN\r\n        token: action.payload.token,\r\n        authentication: true,\r\n      };\r\n\r\n    case LOGIN_USER_ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        message: action.payload,\r\n        failedLogin: true,\r\n      };\r\n\r\n    case FETCH_USERS:\r\n      return {\r\n        ...state,\r\n        users: action.payload,\r\n      };\r\n    case ADD_USER_PENDING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n\r\n    case ADD_USER_SUCCESS: {\r\n      const newUser = action.payload.user;\r\n      const user = [...state.users, newUser];\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        users: user,\r\n      };\r\n    }\r\n    case ADD_USER_ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n        message: action.payload.message,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  FETCH_STUDENT,\r\n  ADD_STUDENT_PENDING,\r\n  ADD_STUDENT_SUCCESS,\r\n  ADD_STUDENT_ERROR,\r\n  UPDATE_STUDENT_PENDING,\r\n  UPDATE_STUDENT_SUCCESS,\r\n  UPDATE_STUDENT_ERROR,\r\n  DELETE_STUDENT_PENDING,\r\n  DELETE_STUDENT_SUCCESS,\r\n  DELETE_STUDENT_ERROR,\r\n  SET_SELECTED_STUDENT_ID,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  students: [],\r\n  size: \"\",\r\n  error: null,\r\n  isLoading: false,\r\n  message: undefined,\r\n  adminActions: false,\r\n  studentSelected: \"\",\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case FETCH_STUDENT:\r\n      return {\r\n        ...state,\r\n        students: action.payload.students,\r\n        adminActions: false,\r\n      };\r\n\r\n    case ADD_STUDENT_PENDING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n\r\n    case ADD_STUDENT_SUCCESS: {\r\n      const newStudent = action.payload.student;\r\n      const students = [...state.students, newStudent];\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        students: students,\r\n      };\r\n    }\r\n\r\n    case ADD_STUDENT_ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n        message: action.payload.message,\r\n      };\r\n\r\n    case UPDATE_STUDENT_PENDING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n\r\n    case UPDATE_STUDENT_SUCCESS: {\r\n      console.log(action.payload);\r\n      const newStudentUpdate = [...state.items];\r\n      const studentToUpdate = newStudentUpdate.findIndex(\r\n        (ele) => ele._id === action.payload._id\r\n      );\r\n\r\n      newStudentUpdate.splice(studentToUpdate, 1, action.payload.student.data);\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        students: newStudentUpdate,\r\n      };\r\n    }\r\n\r\n    case UPDATE_STUDENT_ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        message: action.payload.message,\r\n      };\r\n\r\n    case SET_SELECTED_STUDENT_ID: {\r\n      return {\r\n        ...state,\r\n        studentSelected: action.payload,\r\n      };\r\n    }\r\n\r\n    case DELETE_STUDENT_PENDING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n\r\n    case DELETE_STUDENT_SUCCESS:\r\n      console.log(action.payload);\r\n      const newStudent = [...state.students];\r\n      const studentToDelete = newStudent.findIndex(\r\n        (ele) => ele._id === action.payload._id\r\n      );\r\n\r\n      newStudent.splice(studentToDelete, 1);\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        students: newStudent,\r\n      };\r\n\r\n    case DELETE_STUDENT_ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        message: action.payload.message,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  FETCH_QUALIFICATION,\r\n  ADD_QUALIFICATION_PENDING,\r\n  ADD_QUALIFICATION_SUCCESS,\r\n  ADD_QUALIFICATION_ERROR,\r\n  UPDATE_QUALIFICATION_PENDING,\r\n  UPDATE_QUALIFICATION_SUCCESS,\r\n  UPDATE_QUALIFICATION_ERROR,\r\n  DELETE_QUALIFICATION_PENDING,\r\n  DELETE_QUALIFICATION_SUCCESS,\r\n  DELETE_QUALIFICATION_ERROR,\r\n  SET_SELECTED_QUALIFICATION_ID,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  qualifications: [],\r\n  size: \"\",\r\n  error: null,\r\n  isLoading: false,\r\n  message: undefined,\r\n  adminActions: false,\r\n  qualificationSelected: \"\",\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case FETCH_QUALIFICATION:\r\n      return {\r\n        ...state,\r\n        qualifications: action.payload.qualifications,\r\n        adminActions: false,\r\n      };\r\n\r\n    case ADD_QUALIFICATION_PENDING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n\r\n    case ADD_QUALIFICATION_SUCCESS: {\r\n      console.log(action.payload);\r\n      const newQualification = action.payload.qualification;\r\n      const qualifications = [...state.qualifications, newQualification];\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        qualifications: qualifications,\r\n      };\r\n    }\r\n\r\n    case ADD_QUALIFICATION_ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n        message: action.payload.message,\r\n      };\r\n\r\n    case UPDATE_QUALIFICATION_PENDING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n\r\n    case UPDATE_QUALIFICATION_SUCCESS: {\r\n      console.log(action.payload);\r\n      const newQualificationUpdate = [...state.items];\r\n      const qualificationToUpdate = newQualificationUpdate.findIndex(\r\n        (ele) => ele._id === action.payload._id\r\n      );\r\n\r\n      newQualificationUpdate.splice(\r\n        qualificationToUpdate,\r\n        1,\r\n        action.payload.qualification.data\r\n      );\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        qualifications: newQualificationUpdate,\r\n      };\r\n    }\r\n\r\n    case UPDATE_QUALIFICATION_ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        message: action.payload.message,\r\n      };\r\n\r\n    case SET_SELECTED_QUALIFICATION_ID: {\r\n      return {\r\n        ...state,\r\n        qualificationSelected: action.payload,\r\n      };\r\n    }\r\n\r\n    case DELETE_QUALIFICATION_PENDING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n\r\n    case DELETE_QUALIFICATION_SUCCESS:\r\n      console.log(action.payload);\r\n      const newQualification = [...state.qualifications];\r\n      const qualificationToDelete = newQualification.findIndex(\r\n        (ele) => ele._id === action.payload._id\r\n      );\r\n\r\n      newQualification.splice(qualificationToDelete, 1);\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        qualifications: newQualification,\r\n      };\r\n\r\n    case DELETE_QUALIFICATION_ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        message: action.payload.message,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport loginReducer from \"./login\";\r\nimport productReducer from \"./student\";\r\nimport qualificationReducer from \"./qualification\";\r\n\r\n//Combine the reducers\r\nexport default combineReducers({\r\n  users: loginReducer,\r\n  students: productReducer,\r\n  qualifications: qualificationReducer,\r\n});\r\n","//User Exports\r\nexport const LOGIN_USER_PENDING = \"LOGIN_USER_PENDING\";\r\nexport const LOGIN_USER_SUCCESS = \"LOGIN_USER_SUCCESS\";\r\nexport const LOGIN_USER_ERROR = \"LOGIN_USER_ERROR\";\r\nexport const AUTHENTICATION = \"AUTHENTICATION\";\r\nexport const FETCH_USERS = \"FETCH_USERS\";\r\nexport const ADD_USER_PENDING = \"ADD_USER_PENDING\";\r\nexport const ADD_USER_SUCCESS = \"ADD_USER_SUCCESS\";\r\nexport const ADD_USER_ERROR = \"ADD_USER_ERROR\";\r\nexport const USER_LOGOUT = \"USER_LOGOUT\";\r\n//Students Exports\r\nexport const FETCH_STUDENT = \"FETCH_STUDENT\";\r\nexport const ADD_STUDENT_PENDING = \"ADD_STUDENT_PENDING\";\r\nexport const ADD_STUDENT_SUCCESS = \"ADD_STUDENT_SUCCESS\";\r\nexport const ADD_STUDENT_ERROR = \"ADD_STUDENT_ERROR\";\r\nexport const DELETE_STUDENT_PENDING = \"DELETE_STUDENT_PENDING\";\r\nexport const DELETE_STUDENT_SUCCESS = \"DELETE_STUDENT_SUCCESS\";\r\nexport const DELETE_STUDENT_ERROR = \"DELETE_STUDENT_ERROR\";\r\nexport const UPDATE_STUDENT_PENDING = \"UPDATE_STUDENT_PENDING\";\r\nexport const UPDATE_STUDENT_SUCCESS = \"UPDATE_STUDENT_SUCCESS\";\r\nexport const UPDATE_STUDENT_ERROR = \"UPDATE_STUDENT_ERROR\";\r\nexport const SET_SELECTED_STUDENT_ID = \"SET_SELECTED_STUDENT_ID\";\r\n//Qualification Exports\r\nexport const FETCH_QUALIFICATION = \"FETCH_QUALIFICATION\";\r\nexport const ADD_QUALIFICATION_PENDING = \"ADD_QUALIFICATION_PENDING\";\r\nexport const ADD_QUALIFICATION_SUCCESS = \"ADD_QUALIFICATION_SUCCESS\";\r\nexport const ADD_QUALIFICATION_ERROR = \"ADD_QUALIFICATION_ERROR\";\r\nexport const DELETE_QUALIFICATION_PENDING = \"DELETE_QUALIFICATION_PENDING\";\r\nexport const DELETE_QUALIFICATION_SUCCESS = \"DELETE_QUALIFICATION_SUCCESS\";\r\nexport const DELETE_QUALIFICATION_ERROR = \"DELETE_QUALIFICATION_ERROR\";\r\nexport const UPDATE_QUALIFICATION_PENDING = \"UPDATE_QUALIFICATION_PENDING\";\r\nexport const UPDATE_QUALIFICATION_SUCCESS = \"UPDATE_QUALIFICATION_SUCCESS\";\r\nexport const UPDATE_QUALIFICATION_ERROR = \"UPDATE_QUALIFICATION_ERROR\";\r\nexport const SET_SELECTED_QUALIFICATION_ID = \"SET_SELECTED_QUALIFICATION_ID\";\r\n","import { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"../reducers\";\r\n\r\nconst initialState = {};\r\n//thunk hacer funciones asyncronicas (PREGUNTAR)\r\nconst middleware = [thunk];\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import \"./home.css\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"containerHome\">\r\n        <div className=\"header\">\r\n          <div className=\"title\">\r\n            <h1 className=\"text1\">School App</h1>\r\n            <h1 className=\"text2\">Bienvenidos</h1>\r\n          </div>\r\n          <div className=\"nav\">\r\n            <ul>\r\n              <li>\r\n                <Link className=\"login\" to=\"/Login\">\r\n                  Login\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                {\" \"}\r\n                <Link className=\"register\" to=\"/register\">\r\n                  Register\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div className=\"wrapper\">\r\n          <div className=\"section\">\r\n            <h2>Information</h2>\r\n            <p>\r\n              \r\n            </p>\r\n            <p>\r\n              Escribi aca ivan en ingles la info de lo que hace\r\n              ssssssssssssssssssssssssssssssssssssssssssssss\r\n              ssssssssssssssssssssssssssssssssssssssssssssss\r\n              ssssssssssssssssssssssssssssssssssssssssssssss\r\n              ssssssssssssssssssssssssssssssssssssssssssssss\r\n              ssssssssssssssssssssssssssssssssssssssssssssss\r\n              ssssssssssssssssssssssssssssssssssssssssssssss\r\n              ssssssssssssssssssssssssssssssssssssssssssssss\r\n              ssssssssssssssssssssssssssssssssssssssssssssss\r\n            </p>\r\n            <p>\r\n              Escribi aca ivan en ingles la info de lo que hace\r\n              ssssssssssssssssssssssssssssssssssssssssssssss\r\n              ssssssssssssssssssssssssssssssssssssssssssssss\r\n              ssssssssssssssssssssssssssssssssssssssssssssss\r\n              ssssssssssssssssssssssssssssssssssssssssssssss\r\n              ssssssssssssssssssssssssssssssssssssssssssssss\r\n              ssssssssssssssssssssssssssssssssssssssssssssss\r\n              ssssssssssssssssssssssssssssssssssssssssssssss\r\n              ssssssssssssssssssssssssssssssssssssssssssssss\r\n            </p>\r\n            <p>\r\n              Escribi aca ivan en ingles la info de lo que hace\r\n              ssssssssssssssssssssssssssssssssssssssssssssss\r\n              ssssssssssssssssssssssssssssssssssssssssssssss\r\n              ssssssssssssssssssssssssssssssssssssssssssssss\r\n              ssssssssssssssssssssssssssssssssssssssssssssss\r\n              ssssssssssssssssssssssssssssssssssssssssssssss\r\n              ssssssssssssssssssssssssssssssssssssssssssssss\r\n              ssssssssssssssssssssssssssssssssssssssssssssss\r\n              ssssssssssssssssssssssssssssssssssssssssssssss\r\n            </p>\r\n            <p>\r\n              Escribi aca ivan en ingles la info de lo que hace\r\n              ssssssssssssssssssssssssssssssssssssssssssssss\r\n              ssssssssssssssssssssssssssssssssssssssssssssss\r\n              ssssssssssssssssssssssssssssssssssssssssssssss\r\n              ssssssssssssssssssssssssssssssssssssssssssssss\r\n              ssssssssssssssssssssssssssssssssssssssssssssss\r\n              ssssssssssssssssssssssssssssssssssssssssssssss\r\n              ssssssssssssssssssssssssssssssssssssssssssssss\r\n              ssssssssssssssssssssssssssssssssssssssssssssss\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n//pasar los estados de la aplicacion en el home\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoading: state.isLoading,\r\n    authentication: state.Authentication,\r\n  };\r\n};\r\n//despacho el estado\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators({}, dispatch);\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","import {\r\n  LOGIN_USER_PENDING,\r\n  LOGIN_USER_SUCCESS,\r\n  LOGIN_USER_ERROR,\r\n  FETCH_USERS,\r\n  ADD_USER_PENDING,\r\n  ADD_USER_SUCCESS,\r\n  ADD_USER_ERROR,\r\n  USER_LOGOUT,\r\n  AUTHENTICATION,\r\n} from \"./types\";\r\n\r\n//#region POST USER\r\nexport const postUser = (user) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: ADD_USER_PENDING,\r\n    });\r\n    const request = {\r\n      timeout: 25000,\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(user),\r\n    };\r\n    return fetch(\"https://stormy-brook-34938.herokuapp.com/api/user/signup\", request)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(\"POST USER\", data);\r\n        if (!Object.entries(data).length) {\r\n          return Promise.reject(data);\r\n        }\r\n        return dispatch({\r\n          type: ADD_USER_SUCCESS,\r\n          payload: {\r\n            user: data,\r\n          },\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        return dispatch({\r\n          type: ADD_USER_ERROR,\r\n          payload: error,\r\n        });\r\n      });\r\n  };\r\n};\r\n//#endregion\r\n//#region GET USER\r\nexport const fetchUser = () => (dispatch) => {\r\n  fetch(\"https://stormy-brook-34938.herokuapp.com/api/user/\")\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      return dispatch({\r\n        type: FETCH_USERS,\r\n        payload: data,\r\n      });\r\n    });\r\n};\r\n//#endregion\r\n//#region LOGIN\r\nexport const logIn = (data) => {\r\n  return (dispatch) => {\r\n    //Dispatch action\r\n    dispatch({\r\n      type: LOGIN_USER_PENDING,\r\n    });\r\n    const request = {\r\n      timeout: 25000,\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        email: document.getElementById(\"emailLogin\").value,\r\n        password: document.getElementById(\"passwordLogin\").value,\r\n      }),\r\n    };\r\n    //BackEnd Fetch\r\n    return fetch(\"https://stormy-brook-34938.herokuapp.com/api/user/login\", request)\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        //In case of success on dispatch, move to reducer\r\n        if (response.msg !== \"Authentication Failed\") {\r\n          return dispatch({\r\n            type: LOGIN_USER_SUCCESS,\r\n            payload: response,\r\n          });\r\n        } else {\r\n          return dispatch({\r\n            type: LOGIN_USER_ERROR,\r\n            payload: response.error,\r\n          });\r\n        }\r\n      });\r\n  };\r\n};\r\n//#endregion\r\n//#region LOGOUT\r\nexport const logOut = (dispatch) => {\r\n  return {\r\n    type: USER_LOGOUT,\r\n  };\r\n};\r\n//#endregion\r\n//#region AUTHENTICATION\r\nexport const Authentication = (authentication) => {\r\n  return {\r\n    type: AUTHENTICATION,\r\n    payload: authentication,\r\n  };\r\n};\r\n//#endregion\r\n","import \"./login.css\";\r\nimport React, { Component } from \"react\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport { connect } from \"react-redux\";\r\nimport { logIn } from \"../../redux/actions/login\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ClipLoader } from \"react-spinners\";\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.getLogin = this.getLogin.bind(this);\r\n  }\r\n  //captura los datos de redux\r\n  getLogin = (values) => {\r\n    console.log(this.props);\r\n    this.props.logIn(values).then((response) => {\r\n      console.log(response);\r\n      //si las props estan autorizadas de redux\r\n      if (this.props.authentication) {\r\n        //te tira al home privado\r\n        this.props.history.push(\"/menu\");\r\n      }\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"loginContainer\">\r\n        <Formik\r\n          initialValues={{ email: \"\", password: \"\" }}\r\n          onSubmit={this.getLogin}\r\n        >\r\n          {({ handleSubmit }) => (\r\n            <Form onSubmit={handleSubmit}>\r\n              <div className=\"containerLogin\">\r\n                <h5> Sign in to SchoolApp</h5>\r\n                <div className=\"login\">\r\n                  <Field\r\n                    type=\"email\"\r\n                    id=\"emailLogin\"\r\n                    name=\"email\"\r\n                    placeholder=\"Email\"\r\n                  />\r\n                  <Field\r\n                    type=\"password\"\r\n                    id=\"passwordLogin\"\r\n                    name=\"password\"\r\n                    placeholder=\"Password\"\r\n                  />\r\n                  {!this.props.isLoading ? (\r\n                    <button type=\"submit\" className=\"btnLogin\">\r\n                      Sign In\r\n                    </button>\r\n                  ) : (\r\n                    //Barrita que carga\r\n                    <ClipLoader size={25} color={\"white\"} loading />\r\n                  )}\r\n                  <div>\r\n                    {this.props.failedLogin ? (\r\n                      <div className=\"bad-credentials\"></div>\r\n                    ) : null}\r\n                  </div>\r\n                </div>\r\n                <div className=\"btnLinks\">\r\n                  <p>\r\n                    <Link className=\"btnCreateAccount\" to=\"/register\">\r\n                      Create Account\r\n                    </Link>\r\n                  </p>\r\n                  <p>\r\n                    <Link className=\"btnHome\" to=\"/home\">\r\n                      Back to home\r\n                    </Link>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    users: state.users,\r\n    isLoading: state.users.isLoading,\r\n    authentication: state.users.authentication,\r\n    failedLogin: state.users.failedLogin,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators({ logIn }, dispatch);\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import \"./register.css\";\r\nimport React, { Component } from \"react\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport { connect } from \"react-redux\";\r\nimport { postUser } from \"../../redux/actions/login\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Register extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"registerContainer\">\r\n        <Formik\r\n          initialValues={{ password: \"\", email: \"\" }}\r\n          onSubmit={(values) => {\r\n            this.props.postUser(values);\r\n          }}\r\n        >\r\n          {({ handleSubmit }) => (\r\n            <Form onSubmit={handleSubmit}>\r\n              <div className=\"containerRegister\">\r\n                <h4> Sign up to SchoolApp</h4>\r\n\r\n                <Field\r\n                  type=\"text\"\r\n                  className=\"registerEmail\"\r\n                  name=\"email\"\r\n                  placeholder=\"Email\"\r\n                />\r\n                <Field\r\n                  type=\"text\"\r\n                  className=\"registerPassword\"\r\n                  name=\"password\"\r\n                  placeholder=\"Password\"\r\n                />\r\n                <button className=\"btnSubmit\" type=\"submit\">\r\n                  Sign Up\r\n                </button>\r\n                <div className=\"btnRegisterLinks\">\r\n                  <p>\r\n                    <Link className=\"btnBackHome\" to=\"/home\">\r\n                      Back to home\r\n                    </Link>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  users: state.users,\r\n  isLoading: state.isLoading,\r\n});\r\nexport default connect(mapStateToProps, { postUser })(Register);\r\n","import \"./menu.css\";\r\nimport React, { Component } from \"react\";\r\nimport { Authentication, logOut } from \"../../redux/actions/login\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  postStudent,\r\n  fetchStudents,\r\n  deleteStudent,\r\n} from \"../../redux/actions/student\";\r\nimport {\r\n  postQualification,\r\n  fetchQualifications,\r\n  deleteQualification,\r\n} from \"../../redux/actions/qualification\";\r\n\r\nclass Menu extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      //State fot the PopUp\r\n      check: false,\r\n      chek2: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    //Fetch will go to back end and return the students\r\n    this.props.fetchStudents();\r\n    this.props.fetchQualifications();\r\n  }\r\n\r\n  render() {\r\n    console.log(this.props.qualificationList);\r\n    return (\r\n      <div className=\"containerMenu\">\r\n        {/*PopUp*/}\r\n        <div\r\n          className={this.state.check ? \"overlayEnabled\" : \"overlayDisabled\"}\r\n        ></div>\r\n        <div className={this.state.check ? \"popUpEnabled\" : \"popUpDisabled\"}>\r\n         {/*Start Formik students*/}\r\n          <Formik\r\n            initialValues={{ name: \"\", lastname: \"\", age: \"\", class: \"\" }}\r\n            onSubmit={(values) => {\r\n              //Call for the action \"postStudent\"\r\n              this.props.postStudent(values);\r\n              this.setState((prevState) => ({ check: !prevState.check }));\r\n            }}\r\n          >\r\n            {({ handleSubmit }) => (             \r\n              <Form onSubmit={handleSubmit}>\r\n                <div className=\"containerAddStudent\">\r\n                  <h4> Add Students</h4>\r\n\r\n                  <Field\r\n                    type=\"text\"\r\n                    className=\"nameStudent\"\r\n                    name=\"name\"\r\n                    placeholder=\"Name\"\r\n                  />\r\n\r\n                  <Field\r\n                    type=\"text\"\r\n                    className=\"lastnameStudent\"\r\n                    name=\"lastname\"\r\n                    placeholder=\"Last name\"\r\n                  />\r\n                  <Field\r\n                    type=\"text\"\r\n                    className=\"ageStudent\"\r\n                    name=\"age\"\r\n                    placeholder=\"Age\"\r\n                  />\r\n                  <Field\r\n                    type=\"text\"\r\n                    className=\"classStudent\"\r\n                    name=\"class\"\r\n                    placeholder=\"Class\"\r\n                  />\r\n                  <button className=\"btnAddStudent\" type=\"submit\">\r\n                    Add\r\n                  </button>\r\n                  {/*Close PopUp*/}\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btnAddStudent\"\r\n                    onClick={() =>\r\n                      this.setState((prevState) => ({\r\n                        check: !prevState.check,\r\n                      }))\r\n                    }\r\n                  >\r\n                    Back\r\n                  </button>\r\n                </div>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </div>\r\n        <div\r\n          className={\r\n            this.state.check2 ? \"overlayEnabledMark\" : \"overlayDisabledMark\"\r\n          }\r\n        ></div>\r\n        <div\r\n          className={\r\n            this.state.check2 ? \"popUpEnabledMark\" : \"popUpDisabledMark\"\r\n          }\r\n        >\r\n          {/*Start Formik qualification*/}\r\n          <Formik\r\n            initialValues={{ studentId: \"\", subject: \"\", note: \"\" }}\r\n            onSubmit={(values) => {\r\n              //Call for the action \"postQualification\"\r\n              this.props.postQualification(values);\r\n              this.setState((prevState) => ({ check2: !prevState.check2 }));\r\n            }}\r\n          >\r\n            {({ handleSubmit }) => (\r\n              <Form onSubmit={handleSubmit}>\r\n                <div className=\"containerAddMarks\">\r\n                  <h4> Add Notes</h4>\r\n                  <Field\r\n                    type=\"text\"\r\n                    as=\"select\"\r\n                    className=\"nameStudentMark\"\r\n                    name=\"studentId\"\r\n                    placeholder=\"Student\"\r\n                  >\r\n                    <option defaultValue>Select an student</option> \r\n                    {this.props.studentList.map((student) => {\r\n                      return (\r\n                        <option\r\n                        //The id is saved into the values of formik\r\n                          value={student._id}\r\n                        //Concatenate the name student with the lastname\r\n                        >{`${student.name}-${student.lastname}`}</option>\r\n                      );\r\n                    })}\r\n                  </Field>\r\n                  <Field\r\n                    type=\"text\"\r\n                    className=\"subjectMark\"\r\n                    name=\"subject\"\r\n                    placeholder=\"Subject\"\r\n                  />\r\n                  <Field\r\n                    type=\"text\"\r\n                    className=\"noteMark\"\r\n                    name=\"note\"\r\n                    placeholder=\"Note\"\r\n                  />\r\n                  <button className=\"btnAddMark\" type=\"submit\">\r\n                    Add\r\n                  </button>\r\n                  {/*Close PopUp*/}\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btnAddMark\"\r\n                    onClick={() =>\r\n                      this.setState((prevState) => ({\r\n                        check2: !prevState.check2,\r\n                      }))\r\n                    }\r\n                  >\r\n                    Back\r\n                  </button>\r\n                </div>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </div>\r\n        <table className=\"content-table-student\">\r\n          <thead>\r\n            <tr>\r\n              {/*Name of the columns*/}\r\n              <th>Actions</th>\r\n              <th>Name</th>\r\n              <th>Last name</th>\r\n              <th>Age</th>\r\n              <th>Class</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.props.studentList &&\r\n              this.props.studentList.map((student) => {\r\n                //Show the students if they exist. For aeach student return a row. Everytime it is run a new one is added\r\n                return (\r\n                  <tr>\r\n                    <td>\r\n                      <button\r\n                        className=\"btnDeleteStudent\"\r\n                        onClick={() => {\r\n                          //Call for the action \"deleteStudent\"\r\n                          this.props.deleteStudent(student._id);\r\n                        }}\r\n                      >\r\n                        Delete\r\n                      </button>\r\n                    </td>\r\n                    {/*Bring the atributte of the student*/}     \r\n                    <td>{student.name}</td>\r\n                    <td>{student.lastname}</td>\r\n                    <td>{student.age}</td>\r\n                    <td>{student.class}</td>\r\n                  </tr>\r\n                );\r\n              })}\r\n          </tbody>\r\n          {/*Open PopUp*/}\r\n          <button\r\n            className=\"btnAdd\"\r\n            onClick={() =>\r\n              this.setState((prevState) => ({ check: !prevState.check }))\r\n            }\r\n          >\r\n            Add\r\n          </button>\r\n        </table>\r\n        <table className=\"content-table-mark\">\r\n          <thead>\r\n            <tr>\r\n              <th>Actions</th>\r\n              <th>Student</th>\r\n              <th>Subject</th>\r\n              <th>Note</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.props.qualificationList &&\r\n              this.props.qualificationList.map((qualification) => {\r\n                //Show the qualification if they exist. For each qualification return a row. Everytime it is run a new one is added\r\n                return (\r\n                  <tr>\r\n                    <button\r\n                      className=\"btnDeleteQualification\"\r\n                      onClick={() => {\r\n                        //Call for the action \"deleteQualification\"\r\n                        this.props.deleteQualification(qualification._id);\r\n                      }}\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                    {/*Bring the atributte of the student*/}\r\n                    <td>{`${qualification.student.name}-${qualification.student.lastname}`}</td>\r\n                    <td>{qualification.subject}</td>\r\n                    <td>{qualification.note}</td>\r\n                  </tr>\r\n                );\r\n              })}\r\n          </tbody>\r\n          {/*Open PopUp*/}\r\n          <button\r\n            className=\"btnAdd\"\r\n            onClick={() =>\r\n              this.setState((prevState) => ({ check2: !prevState.check2 }))\r\n            }\r\n          >\r\n            Add\r\n          </button>\r\n        </table>\r\n        <div className=\"buttonLogOut\">\r\n          <Link className=\"btnLogOut\" to=\"/login\" onClick={this.props.logOut}>\r\n            Log Out\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoading: state.isLoading,\r\n    authentication: state.AUTHENTICATION,\r\n    studentList: state.students.students, // Bring the students\r\n    qualificationList: state.qualifications.qualifications, //Bring the qualification\r\n  };\r\n};\r\n//Call for the actions\r\nconst mapDispatchToProps = {\r\n  Authentication,\r\n  logOut,\r\n  postStudent,\r\n  fetchStudents,\r\n  postQualification,\r\n  fetchQualifications,\r\n  deleteStudent,\r\n  deleteQualification,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Menu);\r\n","import {\r\n  FETCH_STUDENT,\r\n  ADD_STUDENT_PENDING,\r\n  ADD_STUDENT_SUCCESS,\r\n  ADD_STUDENT_ERROR,\r\n  UPDATE_STUDENT_PENDING,\r\n  UPDATE_STUDENT_SUCCESS,\r\n  UPDATE_STUDENT_ERROR,\r\n  DELETE_STUDENT_PENDING,\r\n  DELETE_STUDENT_SUCCESS,\r\n  DELETE_STUDENT_ERROR,\r\n} from \"./types\";\r\n\r\nimport store from \"../store/store\";\r\n\r\n//#region GET STUDENTS\r\nexport const fetchStudents = () => (dispatch) => {\r\n  fetch(\"https://stormy-brook-34938.herokuapp.com/api/students\")\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      console.log(data);\r\n      return dispatch({\r\n        type: FETCH_STUDENT,\r\n        payload: data,\r\n      });\r\n    });\r\n};\r\n//#endregion\r\n//#region POST STUDENT\r\nexport const postStudent = (student) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: ADD_STUDENT_PENDING,\r\n    });\r\n    //CombineTools allow us to get the users\r\n    const { token } = store.getState().users;\r\n    const request = {\r\n      timeout: 25000,\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        authorization: `BEARER ${token}`,\r\n      },\r\n      body: JSON.stringify(student),\r\n    };\r\n    return fetch(`https://stormy-brook-34938.herokuapp.com/api/students`, request)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (!Object.entries(data).length) {\r\n          return Promise.reject(data);\r\n        }\r\n        return dispatch({\r\n          type: ADD_STUDENT_SUCCESS,\r\n          payload: {\r\n            student: data.createdStudent,\r\n          },\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        return dispatch({\r\n          type: ADD_STUDENT_ERROR,\r\n          payload: error,\r\n        });\r\n      });\r\n  };\r\n};\r\n//#endregion\r\n//#region UPDATE STUDENTS\r\nexport const updateStudent = (student) => {\r\n  console.log(student);\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: UPDATE_STUDENT_PENDING,\r\n    });\r\n    const options = {\r\n      timeout: 25000,\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ student }),\r\n    };\r\n    return fetch(`https://stormy-brook-34938.herokuapp.com/api/students/${student._id}`, options)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (!Object.entries(data).length) {\r\n          return Promise.reject(data);\r\n        }\r\n        return dispatch({\r\n          type: UPDATE_STUDENT_SUCCESS,\r\n          payload: data,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        return dispatch({\r\n          type: UPDATE_STUDENT_ERROR,\r\n          payload: error,\r\n        });\r\n      });\r\n  };\r\n};\r\n//#endregion\r\n//#region DELETE STUDENT\r\nexport const deleteStudent = (code) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: DELETE_STUDENT_PENDING,\r\n    });\r\n    const options = {\r\n      timeout: 25000,\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    return fetch(`https://stormy-brook-34938.herokuapp.com/api/students/${code}`, options)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (!Object.entries(data).length) {\r\n          return Promise.reject(data);\r\n        }\r\n        return dispatch({\r\n          type: DELETE_STUDENT_SUCCESS,\r\n          payload: data,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        return dispatch({\r\n          type: DELETE_STUDENT_ERROR,\r\n          payload: error,\r\n        });\r\n      });\r\n  };\r\n};\r\n//#endregion\r\n","import {\r\n  FETCH_QUALIFICATION,\r\n  ADD_QUALIFICATION_PENDING,\r\n  ADD_QUALIFICATION_SUCCESS,\r\n  ADD_QUALIFICATION_ERROR,\r\n  UPDATE_QUALIFICATION_PENDING,\r\n  UPDATE_QUALIFICATION_SUCCESS,\r\n  UPDATE_QUALIFICATION_ERROR,\r\n  DELETE_QUALIFICATION_PENDING,\r\n  DELETE_QUALIFICATION_SUCCESS,\r\n  DELETE_QUALIFICATION_ERROR,\r\n} from \"./types\";\r\n\r\nimport store from \"../store/store\";\r\n\r\n//#region GET QUALIFICATIONS\r\nexport const fetchQualifications = () => (dispatch) => {\r\n  fetch(\"https://stormy-brook-34938.herokuapp.com/api/qualifications\")\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      console.log(data);\r\n      return dispatch({\r\n        type: FETCH_QUALIFICATION,\r\n        payload: data,\r\n      });\r\n    });\r\n};\r\n//#endregion\r\n//#region POST QUALIFICATION\r\nexport const postQualification = (qualification) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: ADD_QUALIFICATION_PENDING,\r\n    });\r\n    //CombineTools allow us to get the users\r\n    const { token } = store.getState().users;\r\n    const request = {\r\n      timeout: 25000,\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        authorization: `BEARER ${token}`,\r\n      },\r\n      body: JSON.stringify(qualification),\r\n    };\r\n    return fetch(`https://stormy-brook-34938.herokuapp.com/api/qualifications`, request)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (!Object.entries(data).length) {\r\n          return Promise.reject(data);\r\n        }\r\n        return dispatch({\r\n          type: ADD_QUALIFICATION_SUCCESS,\r\n          payload: {\r\n            qualification: data.createdQualification,\r\n          },\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        return dispatch({\r\n          type: ADD_QUALIFICATION_ERROR,\r\n          payload: error,\r\n        });\r\n      });\r\n  };\r\n};\r\n//#endregion\r\n//#region UPDATE QUALIFICATIONS\r\nexport const updateQualification = (qualification) => {\r\n  console.log(qualification);\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: UPDATE_QUALIFICATION_PENDING,\r\n    });\r\n    const options = {\r\n      timeout: 25000,\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ qualification }),\r\n    };\r\n    return fetch(\r\n      `https://stormy-brook-34938.herokuapp.com/api/qualifications/${qualification._id}`,\r\n      options\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (!Object.entries(data).length) {\r\n          return Promise.reject(data);\r\n        }\r\n\r\n        return dispatch({\r\n          type: UPDATE_QUALIFICATION_SUCCESS,\r\n          payload: data,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        return dispatch({\r\n          type: UPDATE_QUALIFICATION_ERROR,\r\n          payload: error,\r\n        });\r\n      });\r\n  };\r\n};\r\n//#endregion\r\n//#region DELETE QUALIFICATION\r\nexport const deleteQualification = (code) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: DELETE_QUALIFICATION_PENDING,\r\n    });\r\n    const options = {\r\n      timeout: 25000,\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    return fetch(`https://stormy-brook-34938.herokuapp.com/api/qualifications/${code}`, options)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (!Object.entries(data).length) {\r\n          return Promise.reject(data);\r\n        }\r\n        return dispatch({\r\n          type: DELETE_QUALIFICATION_SUCCESS,\r\n          payload: data,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        return dispatch({\r\n          type: DELETE_QUALIFICATION_ERROR,\r\n          payload: error,\r\n        });\r\n      });\r\n  };\r\n};\r\n//#endregion\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n//Single Components\r\nimport Home from \"../components/home/home.js\";\r\nimport Login from \"../components/login/Login.js\";\r\nimport Register from \"../components/signup/register.js\";\r\nimport Menu from \"../components/menu/menu.js\";\r\nimport store from \"../redux/store/store\";\r\n\r\nclass Routes extends Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route exact path=\"/home\" component={Home} />\r\n          <PrivateRoute exact path=\"/menu\" component={Menu} />\r\n          <Route exact path=\"/login\" component={Login} />\r\n          <Route exact path=\"/register\" component={Register} />\r\n          <Redirect from=\"/\" to=\"/home\" />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n//Authentication Route\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) =>\r\n      store.getState().users.token ? (\r\n        //Show component in case of true (Token)\r\n        <Component {...props} />\r\n      ) : (\r\n        //Redirect to home in case of false\r\n        <Redirect to=\"/\" />\r\n      )\r\n    }\r\n  />\r\n);\r\nexport default connect()(Routes);\r\n","import React, { Component } from \"react\";\r\nimport { Provider } from \"react-redux\";\r\n//Bring the store\r\nimport store from \"./redux/store/store\";\r\n//Bring the roads\r\nimport Routes from \"./routes/view\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      //Provider: enable the store for everyone routes\r\n      <Provider store={store}>\r\n        <Routes />\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./app\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}